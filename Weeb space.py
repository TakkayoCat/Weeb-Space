import telebot
from telebot import TeleBot, types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from selenium import webdriver
from selenium.webdriver.common.keys import Keys 
from selenium.webdriver.common.by import By
from time import sleep
import random

bot_name = "Weeb space"
hello = ['–ü—Ä–∏–≤–µ—Ç', '–ü—Ä–∏–≤–µ—Ç–∏–∫üëã', '–ü—Ä–∏–≤–µ—Ç, –≤—Å—ë –≥–æ—Ç–æ–≤–æ –¥–ª—è —Ä–∞–±–æ—Ç—ãüõ†']
goodbye = ['–ü–æ–∫–∞', '–î–æ –≤—Å—Ç—Ä–µ—á–∏üëã', '–ü—Ä–æ—Ä–µ—à–∞–µ—à—å –∑–∞–¥–∞—á–∫—É –Ω–∞–ø–æ—Å–ª–µ–¥–æ–∫üß†? /math']

driver = webdriver.Chrome()
 
TOKEN = "7771595576:AAHOSTYPsWLw7k0Re6i_kK6ORRi5mDboOyw"
bot = telebot.TeleBot(TOKEN)

#start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('–ü—Ä–∏–≤–µ—Ç', '/help', '–ü–æ–∫–∞', '/secret')
    bot.send_message(message.chat.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç " + bot_name + ", —Ä–∞—Å–ø–æ–ª–∞–≥–∞–π—Ç–µ—Å—å. –í–≤–µ–¥–∏—Ç–µ /help, —á—Ç–æ–±—ã –≤–Ω–∏–∫–Ω—É—Ç—å –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É weeb'–æ–≤.", reply_markup=markup)


#help
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, """<b>

/weather - –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –º–∏–Ω—Å–∫–µ
/search - –ü–æ–∏—Å–∫–æ–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ Yandex
/market - –ü–æ–∏—Å–∫ –Ω–∞ Yandex–ú–∞—Ä–∫–µ—Ç
/prog_lang - –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
/youtube - –ü–æ–∏—Å–∫ –≤–∏–¥–µ–æ –Ω–∞ YouTube
/subscribers - –£–∑–Ω–∞—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —Å–≤–æ–µ–≥–æ youtube-–∫–∞–Ω–∞–ª–∞
/games - –°–≤–µ–∂–∏–µ —Ä–µ–ª–∏–∑—ã –∏–≥—Ä
/films - –ù–æ–≤—ã–µ —Ñ–∏–ª—å–º—ã
/math - –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è "–≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∞"

    </b>""", parse_mode='html')


@bot.message_handler(content_types=['text'])
def text(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        num_expression = random.randint(0, len(hello)-1)
        bot.send_message(message.chat.id, "<b>" + hello[num_expression] + "</b>", parse_mode='html')
    if message.text.lower() == '–ø–æ–∫–∞':
        num_expression = random.randint(0, len(goodbye)-1)
        bot.send_message(message.chat.id, "<b>" + goodbye[num_expression] + "</b>", parse_mode='html')


#–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å
@bot.message_handler(commands=['secret'])
def secret(message):
    secrets = types.InlineKeyboardMarkup(row_width=1)
    item = types.InlineKeyboardButton(' ', callback_data='0')
    item2 = types.InlineKeyboardButton(' ', callback_data='1')
    item3 = types.InlineKeyboardButton(' ', callback_data='2')
    secrets.add(item, item1, item2)
    bot.send_message(message.chat.id, '–ê –≤–æ—Ç –∏ —Å–µ–∫—Ä–µ—Ç!', reply_markup = secrets)


@bot.callback_query_handler(func=lambda call:True)
def data(call):
    if call.message:
        if call.data == '0':
            bot.send_message(call.message.chat.id, '/–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ/')
        elif call.data == '1':
            bot.send_message(call.message.chat.id, '/–ü—Ä–æ—â–∞–Ω–∏–µ/')
        elif call.data == '2':
            bot.send_message(call.message.chat.id, '/–ß—Ç–æ –Ω–∏–±—É–¥—å –µ—â—ë/')


#weather
@bot.message_handler(commands=['weather'])
def weather(message):
    driver.get("https://yandex.by/pogoda/minsk?utm_source=serp&utm_campaign=wizard&utm_medium=desktop&utm_content=wizard_desktop_main&utm_term=title")
    degrees = driver.find_element(By.XPATH, '//*[@id="content_left"]/div[2]/div[1]/div[4]/a/div/div[1]/span').text
    weather_now = driver.find_element(By.CLASS_NAME, "link__condition").text
    feels = driver.find_elements(By.CLASS_NAME, "term__value")
    feels = feeling[1].text
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –≤ –ú–∏–Ω—Å–∫–µ " + degrees + " –≥—Ä–∞–¥—É—Å–æ–≤\n" + weather_now + " \n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ " + feels)


#search
@bot.message_handler(commands=["search"])
def search(message):
    msg = bot.send_message(message.chat.id, "–ó–∞–¥–∞–π—Ç–µ –°–µ—Ç–∏ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –≤–æ–ø—Ä–æ—Å:")     
    bot.register_next_step_handler(msg, y_search)

def y_search(message):
    bot.send_message(message.chat.id, "<i>–û–¥–Ω—É –º–∏–Ω—É—Ç—É...</i>", parse_mode='html')
    driver.get("https://yandex.by/search/?text=" + message.text)
    sleep(2)
    sites = driver.find_elements(By.CLASS_NAME, "organic__url")
    for i in range(len(sites)):
        if len(sites[i].get_attribute("href")) < 400:
            bot.send_message(message.chat.id, "<b>"+sites[i].text + "</b>\n" + sites[i].get_attribute("href"), parse_mode='html')
        if i > 4:
            break


#market
@bot.message_handler(commands=["market"])
def market(message):
    msg = bot.send_message(message.chat.id, "–ö–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤—ã –∏—â–µ—Ç–µ?")
    bot.register_next_step_handler(msg, y_market)

def y_market(message):
    product = message.text
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞–π–¥—ë–º...")
    driver.get("https://market.yandex.by")
    
    sleep(1)

    search_shop = driver.find_element(By.ID, "header-search")
    search_shop.send_keys(product)
    search_shop.submit()

    sleep(3)

    products = driver.find_elements(By.CLASS_NAME, "m4M-1")
    products_money = driver.find_elements(By.CLASS_NAME, "cia-cs")
    products_image = driver.find_elements(By.CLASS_NAME, "iqmYz")
    print(len(products))
    print(len(products_money))
    print(len(products_image))
    for i in range(len(products)):
        name_p = products[i].text
        money_p = products_money[i].text
        img_p = products_image[i].get_attribute("src")
        bot.send_photo(message.chat.id, img_p, caption="<b>" +name_p + "\n" + "–¶–µ–Ω–∞: " + money_p + "</b>", parse_mode='html')
        if i > 3:
            break
    if len(products) == 0:
        bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ")


#prog_lang
@bot.message_handler(commands=["prog_lang"])
def prog_lang(message):
    bot.send_message(message.chat.id, "–¢–æ–ø —è–∑—ã–∫–æ–≤üîù...)")
    driver.get("https://tiobe.com/tiobe-index/")

    sleep(1)

    lang = driver.find_elements(By.XPATH, '//td[5]')
    langs_list = []
    for i in range(len(lang)):
        langs_list.append(str(i+1) + ". " + lang[i].text)
        if i == 14:
            break
    langs = '\n'.join(langs_list)
    bot.send_message(message.chat.id, langs)


#youtube
@bot.message_handler(commands=["youtube"])
def youtube(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∂–µ–ª–∞–µ–º–æ–≥–æ –≤–∏–¥–µ–æ")
    bot.register_next_step_handler(msg, youtube_search)

def youtube_search(message):
    driver.get("https://www.youtube.com/results?search_query=" + message.text)

    sleep(3)

    videos = driver.find_elements(By.ID, "video-title")
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏...‚ö°Ô∏è")
    i = 0
    for video in videos:
        i += 1
        bot.send_message(message.chat.id, video.get_attribute("href"))
        if i > 4:
            break


#–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å
#subscribers
@bot.message_handler(commands=["subscribers"])
def subscribers(message):
    bot.send_message(message.chat.id, "–ù–µ –∑–∞–±—É–¥—å –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —Å–≤–æ–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤! \n<i>–ö–∞–Ω–∞–ª –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö‚öôÔ∏è</i>", parse_mode='html')
    channel = "https://www.youtube.com/channel/....."
    driver.get(channel)

    sleep(1)

    sub_len = driver.find_element(By.ID, "subscriber-count").text
    bot.send_message(message.chat.id, "–£ —Ç–µ–±—è —Å–µ–π—á–∞—Å <b>" + sub_len+"</b>", parse_mode='html')


#games
@bot.message_handler(commands=["games"])
def games(message):
    bot.send_message(message.chat.id, "üéÆ–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ 5 –Ω–æ–≤—ã—Ö –∫–ª–∞—Å—Å–Ω—ã—Ö –∏–≥—Ä")
    driver.get("https://iwantgames.ru/newgames-pc/")
    games = driver.find_elements(By.TAG_NAME, "h2")
    games_date = driver.find_elements(By.CLASS_NAME, "date")
    games_img = driver.find_elements(By.CLASS_NAME, "attachment-game")
    for i in range(len(games)):
        name_g = games[i].text
        date_g = games_date[i].text
        img_g = games_img[i].get_attribute("src")
        bot.send_photo(message.chat.id, img_g, caption="<b>" + name_g + "</b>\n<i>" + date_g + "</i>",parse_mode="html")
        if i > 3:
            break


#films
@bot.message_handler(commands=['films'])
def films(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª—è—é –Ω–æ–≤–∏–Ω–∫–∏ —Ñ–∏–ª—å–º–æ–≤")
    driver.get("https://msk.kinoafisha.info/movies/")

    sleep(1)

    films_names = driver.find_elements(By.CLASS_NAME, "movieItem_title")
    films_images = driver.find_elements(By.CLASS_NAME, "movieItem_poster")
    for i in range(len(films_names)):
        bot.send_photo(message.chat.id, films_images[i].get_attribute("src"), caption=films_names[i].text)
        if i == 5:
            break


#math
@bot.message_handler(commands=['math'])
def math(message):
    global num
    first = random.randint(0, 300)
    second = random.randint(0, 300)
    pl_min = random.randint(0,1)
 
    if pl_min == 0:
        pl_min = "+"
    if pl_min == 1:
        pl_min = "-"
 
    msg = bot.send_message(message.chat.id, "–ò—Ç–∞–∫...:\n" + str(one_num) + " "+ pl_min + " " + str(two_num))
    bot.register_next_step_handler(msg, right)
    if pl_min == 0:
        num = one_num + two_num
    else:
        num = one_num - two_num
    print(num)
    
def right(message):
    try:
        if int(message.text) == num:
            bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!‚úÖ") 
        else:
            bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ‚ùå")
    except:
        bot.send_message(message.chat.id, "–Å—â–µ —Ä–∞–∑ü§ñ!!!, /math") 





bot.polling()